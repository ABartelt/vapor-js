{"version":3,"file":"laravel-vapor.esm.js","sources":["../src/index.js"],"sourcesContent":["const axios = require('axios')\n\nconst assetUrl = process.env.MIX_VAPOR_ASSET_URL\n    ? process.env.MIX_VAPOR_ASSET_URL\n    : '';\n\nclass Vapor\n{\n   /**\n     * Generate the S3 URL to an application asset.\n     */\n    asset(path) {\n        return assetUrl + '/' + path;\n    }\n\n    /**\n     * Store a file in S3 and return its UUID, key, and other information.\n     */\n    async store(file, options = {}) {\n        console.log('signedStorageUrl', options);\n        // alert(options.signedStorageUrl);\n        const response = await axios.post(options.signedStorageUrl ? options.signedStorageUrl : '/vapor/signed-storage-url', {\n            'bucket': options.bucket || '',\n            'content_type': options.contentType || file.type,\n            'expires': options.expires || '',\n            'visibility': options.visibility || ''\n        }, {\n            baseURL: options.baseURL || null,\n            headers: options.headers || {},\n            ...options.options\n        });\n\n        let headers = response.data.headers;\n\n        if ('Host' in headers) {\n            delete headers.Host;\n        }\n\n        if (typeof options.progress === 'undefined') {\n            options.progress = () => {};\n        }\n\n        const cancelToken = options.cancelToken || ''\n\n        await axios.put(response.data.url, file, {\n            cancelToken: cancelToken,\n            headers: headers,\n            onUploadProgress: (progressEvent) => {\n                options.progress(progressEvent.loaded / progressEvent.total);\n            }\n        })\n\n        response.data.extension = file.name.split('.').pop()\n\n        return response.data;\n    }\n}\n\nmodule.exports = new Vapor();\n"],"names":["axios","require","assetUrl","process","env","MIX_VAPOR_ASSET_URL","module","exports","asset","path","store","file","options","console","log","post","signedStorageUrl","bucket","content_type","contentType","type","expires","visibility","baseURL","headers","response","data","Host","progress","put","url","cancelToken","onUploadProgress","progressEvent","loaded","total","extension","name","split","pop"],"mappings":"+MAAA,IAAMA,EAAQC,QAAQ,SAEhBC,EAAWC,QAAQC,IAAIC,oBACvBF,QAAQC,IAAIC,oBACZ,GAsDNC,OAAOC,QAAU,wDA/CbC,MAAA,SAAMC,GACF,OAAOP,EAAW,IAAMO,KAMtBC,eAAMC,EAAMC,YAAAA,IAAAA,EAAU,QAAI,OAC5BC,QAAQC,IAAI,mBAAoBF,mBAETZ,EAAMe,KAAKH,EAAQI,iBAAmBJ,EAAQI,iBAAmB,4BAA6B,CACjHC,OAAUL,EAAQK,QAAU,GAC5BC,aAAgBN,EAAQO,aAAeR,EAAKS,KAC5CC,QAAWT,EAAQS,SAAW,GAC9BC,WAAcV,EAAQU,YAAc,OAEpCC,QAASX,EAAQW,SAAW,KAC5BC,QAASZ,EAAQY,SAAW,IACzBZ,EAAQA,yBARTa,GAWN,IAAID,EAAUC,EAASC,KAAKF,QAdA,MAgBxB,SAAUA,UACHA,EAAQG,UAGa,IAArBf,EAAQgB,WACfhB,EAAQgB,SAAW,8BAKjB5B,EAAM6B,IAAIJ,EAASC,KAAKI,IAAKnB,EAAM,CACrCoB,YAHgBnB,EAAQmB,aAAe,GAIvCP,QAASA,EACTQ,iBAAkB,SAACC,GACfrB,EAAQgB,SAASK,EAAcC,OAASD,EAAcE,2BAM9D,OAFAV,EAASC,KAAKU,UAAYzB,EAAK0B,KAAKC,MAAM,KAAKC,MAExCd,EAASC"}