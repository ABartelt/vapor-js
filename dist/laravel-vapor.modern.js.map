{"version":3,"file":"laravel-vapor.modern.js","sources":["../src/index.js"],"sourcesContent":["const axios = require('axios')\n\nconst assetUrl = process.env.MIX_VAPOR_ASSET_URL\n    ? process.env.MIX_VAPOR_ASSET_URL\n    : '';\n\nclass Vapor\n{\n   /**\n     * Generate the S3 URL to an application asset.\n     */\n    asset(path) {\n        return assetUrl + '/' + path;\n    }\n\n    /**\n     * Store a file in S3 and return its UUID, key, and other information.\n     */\n    async store(file, options = {}) {\n        console.log('signedStorageUrl', options);\n        // alert(options.signedStorageUrl);\n        const response = await axios.post(options.signedStorageUrl ? options.signedStorageUrl : '/vapor/signed-storage-url', {\n            'bucket': options.bucket || '',\n            'content_type': options.contentType || file.type,\n            'expires': options.expires || '',\n            'visibility': options.visibility || ''\n        }, {\n            baseURL: options.baseURL || null,\n            headers: options.headers || {},\n            ...options.options\n        });\n\n        let headers = response.data.headers;\n\n        if ('Host' in headers) {\n            delete headers.Host;\n        }\n\n        if (typeof options.progress === 'undefined') {\n            options.progress = () => {};\n        }\n\n        const cancelToken = options.cancelToken || ''\n\n        await axios.put(response.data.url, file, {\n            cancelToken: cancelToken,\n            headers: headers,\n            onUploadProgress: (progressEvent) => {\n                options.progress(progressEvent.loaded / progressEvent.total);\n            }\n        })\n\n        response.data.extension = file.name.split('.').pop()\n\n        return response.data;\n    }\n}\n\nmodule.exports = new Vapor();\n"],"names":["axios","require","assetUrl","process","env","MIX_VAPOR_ASSET_URL","module","exports","asset","path","[object Object]","file","options","console","log","response","post","signedStorageUrl","bucket","content_type","contentType","type","expires","visibility","baseURL","headers","data","Host","progress","cancelToken","put","url","onUploadProgress","progressEvent","loaded","total","extension","name","split","pop"],"mappings":"+MAAA,MAAMA,EAAQC,QAAQ,SAEhBC,EAAWC,QAAQC,IAAIC,oBACvBF,QAAQC,IAAIC,oBACZ,GAsDNC,OAAOC,QAAU,IApDjB,MAKIC,MAAMC,GACF,OAAOP,EAAW,IAAMO,EAMjBC,YAACC,EAAMC,EAAU,IACxBC,QAAQC,IAAI,mBAAoBF,GAEhC,MAAMG,QAAiBf,EAAMgB,KAAKJ,EAAQK,iBAAmBL,EAAQK,iBAAmB,4BAA6B,CACjHC,OAAUN,EAAQM,QAAU,GAC5BC,aAAgBP,EAAQQ,aAAeT,EAAKU,KAC5CC,QAAWV,EAAQU,SAAW,GAC9BC,WAAcX,EAAQW,YAAc,OAEpCC,QAASZ,EAAQY,SAAW,KAC5BC,QAASb,EAAQa,SAAW,IACzBb,EAAQA,UAGf,IAAIa,EAAUV,EAASW,KAAKD,QAExB,SAAUA,UACHA,EAAQE,UAGa,IAArBf,EAAQgB,WACfhB,EAAQgB,SAAW,QAGvB,MAAMC,EAAcjB,EAAQiB,aAAe,GAY3C,aAVM7B,EAAM8B,IAAIf,EAASW,KAAKK,IAAKpB,EAAM,CACrCkB,YAAaA,EACbJ,QAASA,EACTO,iBAAmBC,IACfrB,EAAQgB,SAASK,EAAcC,OAASD,EAAcE,UAI9DpB,EAASW,KAAKU,UAAYzB,EAAK0B,KAAKC,MAAM,KAAKC,MAExCxB,EAASW"}